/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package shapes;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ann
 */
public class Colorize extends javax.swing.JFrame implements Node{

    /**
     * Creates new form Colorize
     */
    private Shape sh;
    private Node parent;
    public Colorize(Shape s) {
        sh=s;
        initComponents();
         setTitle("Colorize");
        setVisible(true);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jRadioButtonBorder = new javax.swing.JRadioButton();
        jRadioButtonFill = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jRadioButtonBorder.setText("Border Color");
        jRadioButtonBorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBorderActionPerformed(evt);
            }
        });

        jRadioButtonFill.setText("Fill Color");
        jRadioButtonFill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonBorder)
                    .addComponent(jRadioButtonFill))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jRadioButtonBorder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButtonFill)
                .addGap(104, 104, 104))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonBorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBorderActionPerformed
        // TODO add your handling code here:
         sh.setColor(jColorChooser1.getColor());
    }//GEN-LAST:event_jRadioButtonBorderActionPerformed

    private void jRadioButtonFillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFillActionPerformed
        // TODO add your handling code here
         sh.setFillColor(jColorChooser1.getColor());
    }//GEN-LAST:event_jRadioButtonFillActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
         if((this.checkRadios())==false)
             JOptionPane.showMessageDialog(null,"Please select a color to change");
         else{
         setVisible(false);
        ((JFrame)getParentNode()).setVisible(true);}
    }//GEN-LAST:event_formWindowClosing
   public boolean checkRadios()
    {
         if(!(jRadioButtonFill.isSelected()) && !(jRadioButtonBorder.isSelected()))
             return false;
         else
             return true;
    }
  
                
         
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JRadioButton jRadioButtonBorder;
    private javax.swing.JRadioButton jRadioButtonFill;
    // End of variables declaration//GEN-END:variables

    @Override
    public Node getParentNode() {
       return parent;
    }

    @Override
    public void setParentNode(Node node) {
    this.parent=node;  
    }
}
